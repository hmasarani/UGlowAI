{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./TryFreePage.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TryFreePage=()=>{const[images,setImages]=useState([null,null,null]);const[error,setError]=useState(\"\");const[isSubmitting,setIsSubmitting]=useState(false);const navigate=useNavigate();const handleImageChange=(index,event)=>{const newImages=[...images];const file=event.target.files[0];if(file){newImages[index]=file;setImages(newImages);setError(\"\");// Clear error on valid file selection\n}};const handleTakePhoto=index=>{const inputElement=document.getElementById(`file-input-${index}`);if(inputElement){inputElement.click();}else{console.error(`Input element with id file-input-${index} not found.`);}};const handleRemoveImage=index=>{const newImages=[...images];newImages[index]=null;setImages(newImages);};const handleSubmit=async()=>{if(images.filter(img=>img!==null).length!==3){setError(\"Please upload exactly 3 pictures.\");return;}const formData=new FormData();images.forEach((image,index)=>{formData.append(\"files\",image,`image${index+1}.jpg`);});setIsSubmitting(true);// Indicate submission is in progress\nsetError(\"\");// Clear any previous error\ntry{const response=await fetch(\"http://localhost:5001/analyze-images\",{method:\"POST\",body:formData});if(!response.ok){const errorData=await response.text();throw new Error(`Server Error: ${response.statusText}\\n${errorData}`);}const result=await response.json();if(result&&result.scores){localStorage.setItem(\"analysisResults\",JSON.stringify(result.scores));navigate(\"/your-results\");}else{setError(\"Server returned no results. Please try again.\");}}catch(error){console.error(\"Error analyzing images:\",error);setError(\"Failed to analyze images. Please ensure all images are valid and try again.\");}finally{setIsSubmitting(false);// Reset submission state\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"try-free-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Upload Your Images\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload exactly 3 pictures of your face for analysis.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"upload-section\",children:images.map((image,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"upload-item\",children:image?/*#__PURE__*/_jsxs(\"div\",{className:\"image-preview\",children:[/*#__PURE__*/_jsx(\"img\",{src:URL.createObjectURL(image),alt:`Uploaded ${index+1}`}),/*#__PURE__*/_jsx(\"button\",{className:\"remove-button\",onClick:()=>handleRemoveImage(index),children:\"Remove\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"upload-controls\",children:[/*#__PURE__*/_jsx(\"input\",{id:`file-input-${index}`,type:\"file\",accept:\"image/*\",capture:\"environment\",onChange:e=>handleImageChange(index,e)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTakePhoto(index),children:\"Choose Image\"}),/*#__PURE__*/_jsx(\"p\",{className:\"placeholder\",children:\"No file selected\"})]})},index))}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:isSubmitting,className:isSubmitting?\"submit-button disabled\":\"submit-button\",children:isSubmitting?\"Submitting...\":\"Submit\"})]});};export default TryFreePage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","TryFreePage","images","setImages","error","setError","isSubmitting","setIsSubmitting","navigate","handleImageChange","index","event","newImages","file","target","files","handleTakePhoto","inputElement","document","getElementById","click","console","handleRemoveImage","handleSubmit","filter","img","length","formData","FormData","forEach","image","append","response","fetch","method","body","ok","errorData","text","Error","statusText","result","json","scores","localStorage","setItem","JSON","stringify","className","children","map","src","URL","createObjectURL","alt","onClick","id","type","accept","capture","onChange","e","disabled"],"sources":["/Users/masarani/Desktop/Glow/glowcare-mvp/src/components/TryFreePage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./TryFreePage.css\";\n\nconst TryFreePage = () => {\n  const [images, setImages] = useState([null, null, null]);\n  const [error, setError] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n\n  const handleImageChange = (index, event) => {\n    const newImages = [...images];\n    const file = event.target.files[0];\n\n    if (file) {\n      newImages[index] = file;\n      setImages(newImages);\n      setError(\"\"); // Clear error on valid file selection\n    }\n  };\n\n  const handleTakePhoto = (index) => {\n    const inputElement = document.getElementById(`file-input-${index}`);\n    if (inputElement) {\n      inputElement.click();\n    } else {\n      console.error(`Input element with id file-input-${index} not found.`);\n    }\n  };\n  \n\n  const handleRemoveImage = (index) => {\n    const newImages = [...images];\n    newImages[index] = null;\n    setImages(newImages);\n  };\n\n  const handleSubmit = async () => {\n    if (images.filter((img) => img !== null).length !== 3) {\n      setError(\"Please upload exactly 3 pictures.\");\n      return;\n    }\n\n    const formData = new FormData();\n    images.forEach((image, index) => {\n      formData.append(\"files\", image, `image${index + 1}.jpg`);\n    });\n\n    setIsSubmitting(true); // Indicate submission is in progress\n    setError(\"\"); // Clear any previous error\n\n    try {\n      const response = await fetch(\"http://localhost:5001/analyze-images\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`Server Error: ${response.statusText}\\n${errorData}`);\n      }\n\n      const result = await response.json();\n\n      if (result && result.scores) {\n        localStorage.setItem(\"analysisResults\", JSON.stringify(result.scores));\n        navigate(\"/your-results\");\n      } else {\n        setError(\"Server returned no results. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error analyzing images:\", error);\n      setError(\"Failed to analyze images. Please ensure all images are valid and try again.\");\n    } finally {\n      setIsSubmitting(false); // Reset submission state\n    }\n  };\n\n  return (\n    <div className=\"try-free-page\">\n      <h1>Upload Your Images</h1>\n      <p>Upload exactly 3 pictures of your face for analysis.</p>\n      <div className=\"upload-section\">\n        {images.map((image, index) => (\n          <div className=\"upload-item\" key={index}>\n            {image ? (\n              <div className=\"image-preview\">\n                <img src={URL.createObjectURL(image)} alt={`Uploaded ${index + 1}`} />\n                <button className=\"remove-button\" onClick={() => handleRemoveImage(index)}>\n                  Remove\n                </button>\n              </div>\n            ) : (\n              <div className=\"upload-controls\">\n                <input\n                    id={`file-input-${index}`}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    capture=\"environment\"\n                    onChange={(e) => handleImageChange(index, e)}\n                  />\n                <button onClick={() => handleTakePhoto(index)}>Choose Image</button>\n                <p className=\"placeholder\">No file selected</p>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n      <button \n        onClick={handleSubmit} \n        disabled={isSubmitting} \n        className={isSubmitting ? \"submit-button disabled\" : \"submit-button\"}\n      >\n        {isSubmitting ? \"Submitting...\" : \"Submit\"}\n      </button>\n    </div>\n  );\n};\n\nexport default TryFreePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}